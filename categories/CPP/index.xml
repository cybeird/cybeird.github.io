<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cpp on Sundae&#39;s Blog</title>
    <link>https://cybeird.github.io/categories/cpp/</link>
    <description>Recent content in cpp on Sundae&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 23 Sep 2022 10:23:20 +0800</lastBuildDate><atom:link href="https://cybeird.github.io/categories/cpp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>力扣第二题：创建链表</title>
      <link>https://cybeird.github.io/day-2-sep-create-chain-table/</link>
      <pubDate>Fri, 23 Sep 2022 10:23:20 +0800</pubDate>
      
      <guid>https://cybeird.github.io/day-2-sep-create-chain-table/</guid>
      <description>&lt;p&gt;设计链表的实现。您可以选择使用单链表或双链表。单链表中的节点应该具有两个属性：val 和 next。val 是当前节点的值，next 是指向下一个节点的指针/引用。如果要使用双向链表，则还需要一个属性 prev 以指示链表中的上一个节点。假设链表中的所有节点都是 0-index 的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://leetcode.cn/problems/design-linked-list&#34;&gt;力扣（LeetCode）&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43;指针与内存管理：申请与释放</title>
      <link>https://cybeird.github.io/memory-new-and-release/</link>
      <pubDate>Fri, 23 Sep 2022 09:13:38 +0800</pubDate>
      
      <guid>https://cybeird.github.io/memory-new-and-release/</guid>
      <description>&lt;p&gt;C++新增了两个关键字
new 和 delete：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;new 用来动态分配内存&lt;/li&gt;
&lt;li&gt;delete 用来释放内存&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>力扣第一题：哈希表判断匹配与否</title>
      <link>https://cybeird.github.io/day-1-sep-hash-table/</link>
      <pubDate>Thu, 22 Sep 2022 16:10:13 +0800</pubDate>
      
      <guid>https://cybeird.github.io/day-1-sep-hash-table/</guid>
      <description>&lt;p&gt;给你一个整数数组 arr ，数组中的每个整数 互不相同 。另有一个由整数数组构成的数组 pieces，其中的整数也 互不相同 。请你以 任意顺序 连接 pieces 中的数组以形成 arr 。但是，不允许 对每个数组 pieces[i] 中的整数重新排序。&lt;/p&gt;
&lt;p&gt;来源：&lt;a href=&#34;https://leetcode.cn/problems/check-array-formation-through-concatenation&#34;&gt;力扣（LeetCode）&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>测试，寻找项目中的奇怪bug</title>
      <link>https://cybeird.github.io/bugs-of-evaluation-project/</link>
      <pubDate>Wed, 21 Sep 2022 16:48:25 +0800</pubDate>
      
      <guid>https://cybeird.github.io/bugs-of-evaluation-project/</guid>
      <description>&lt;p&gt;本次主要在各个界面寻找可能是问题的部分，并将其进行记录&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我的项目正在蒸蒸日上了！</title>
      <link>https://cybeird.github.io/post/my-program-updating/</link>
      <pubDate>Wed, 24 Aug 2022 17:49:17 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/my-program-updating/</guid>
      <description>总任务清单 使用sqlite 较为简单，qt自带sqlite驱动，配置即可 sqlite基本不需要什么启动项或者应用程序来使用，他就像Markdo</description>
    </item>
    
    <item>
      <title>GraphicsDraw图像绘画同步项目当前存在的些许问题及解决方式</title>
      <link>https://cybeird.github.io/post/graphicsdraw-updata/</link>
      <pubDate>Tue, 09 Aug 2022 16:02:18 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/graphicsdraw-updata/</guid>
      <description>总览 程序首先分为三个部分：绘图、数据库存储、TCP传输 程序设计模式使用单例模式，尽可能保证函数的功能单一化 绘图 重构qgraphicsitem</description>
    </item>
    
    <item>
      <title>从头开始的Python(z)初次见面</title>
      <link>https://cybeird.github.io/post/how-i-learn-python/</link>
      <pubDate>Thu, 17 Oct 2019 21:53:31 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/how-i-learn-python/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据结构实验课の解题报告-Week4</title>
      <link>https://cybeird.github.io/post/how-i-learn-data-4/</link>
      <pubDate>Wed, 16 Oct 2019 21:33:01 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/how-i-learn-data-4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据结构实验课の解题报告-Week3</title>
      <link>https://cybeird.github.io/post/how-i-learn-data-3/</link>
      <pubDate>Sat, 12 Oct 2019 22:50:10 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/how-i-learn-data-3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>如何将将类模板中的成员函数在类模板外定义呢</title>
      <link>https://cybeird.github.io/post/how-make-model-out/</link>
      <pubDate>Fri, 11 Oct 2019 20:13:41 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/how-make-model-out/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先我们知道类模板很重要，而这个声明是在类前进行的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;但是每个成员函数在模板外定义的时候都要再声明一边类模板，这就是我所知道但却忘记的&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>在类的外面调用类的private数据</title>
      <link>https://cybeird.github.io/post/how-to-use-private-out/</link>
      <pubDate>Fri, 11 Oct 2019 20:13:35 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/how-to-use-private-out/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据结构实验课の解题报告-Week2</title>
      <link>https://cybeird.github.io/post/how-i-learn-data-2/</link>
      <pubDate>Thu, 10 Oct 2019 17:09:36 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/how-i-learn-data-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>C艹实验课の解题报告-Week2</title>
      <link>https://cybeird.github.io/post/how-i-learn-c-2/</link>
      <pubDate>Thu, 10 Oct 2019 17:09:33 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/how-i-learn-c-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据结构实验课の解题报告-Week1</title>
      <link>https://cybeird.github.io/post/how-i-learn-data-1/</link>
      <pubDate>Wed, 09 Oct 2019 12:58:50 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/how-i-learn-data-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>C艹实验课の解题报告-Week1</title>
      <link>https://cybeird.github.io/post/how-i-learn-c-1/</link>
      <pubDate>Tue, 08 Oct 2019 21:26:19 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/how-i-learn-c-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>好好想想你过去的所做作为</title>
      <link>https://cybeird.github.io/post/3-days-left/</link>
      <pubDate>Tue, 15 Nov 2016 08:09:40 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/3-days-left/</guid>
      <description>&lt;p&gt;先动最左边的部分，在动最右边，基本上就妥&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>此乃天命，而非吾等凡人所能明了(4天?时间充裕的很T.T)</title>
      <link>https://cybeird.github.io/post/4-days-left/</link>
      <pubDate>Mon, 14 Nov 2016 15:22:06 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/4-days-left/</guid>
      <description>今天的比赛是在外网进行的，所以我不必像昨天一样痛苦的在把题目粘上来了(根本无法忍受它坑爹的排版!!)。 恐惧的是，当我看到第一题第一眼的时候就</description>
    </item>
    
    <item>
      <title>令人感到恐惧的DAY1?</title>
      <link>https://cybeird.github.io/post/5-days-left/</link>
      <pubDate>Sun, 13 Nov 2016 15:15:22 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/5-days-left/</guid>
      <description>第一题？最小生成树啊 今天的第一题就让我不懂了，题意描述的太不清楚了(当然不是因为我蒟蒻!)，反正就是，怎么看都是走地道的话怎么都最多只能携带</description>
    </item>
    
    <item>
      <title>队列中取最大值操作</title>
      <link>https://cybeird.github.io/post/how-to-get-the-maxelement-in-queue/</link>
      <pubDate>Tue, 08 Nov 2016 20:49:19 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/how-to-get-the-maxelement-in-queue/</guid>
      <description>&lt;p&gt;本文从&lt;a href=&#34;http://blog.jobbole.com/106940/#comment-158883&#34;&gt;漫画算法：最小栈的实现&lt;/a&gt;的评论区得到启发，有所感触，从而写下这篇博文.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>树状天平(Not so Mobile,UVa 839)(TOWQs)</title>
      <link>https://cybeird.github.io/post/not-so-mobile/</link>
      <pubDate>Tue, 08 Nov 2016 17:38:54 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/not-so-mobile/</guid>
      <description>下面看一道名为天平的题目(Not si Mobile,UVa 839) 题目描述 输入一个树状天平,根据力矩相等的原则判断是否平衡。如图，所谓力矩相等，就是WlDl=WrDr，</description>
    </item>
    
    <item>
      <title>11月4日解题报告</title>
      <link>https://cybeird.github.io/post/noip2016-11-4-reports/</link>
      <pubDate>Fri, 04 Nov 2016 11:00:03 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/noip2016-11-4-reports/</guid>
      <description>&lt;p&gt;没错,2017年的我发现我当年什么都没写,已然忘记当年在干什么了..就这样吧&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>关于奶牛的几道水题</title>
      <link>https://cybeird.github.io/post/water-cow/</link>
      <pubDate>Fri, 28 Oct 2016 08:55:57 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/water-cow/</guid>
      <description>在COGS上进行了努力寻找之后发现了这几道题实际上是[NOIP2010冲刺十二]的题(虽然并不知道是什么东西) 这道题实在是太水了，以至于我不</description>
    </item>
    
    <item>
      <title>计算字符串的相似度(TOWQs)</title>
      <link>https://cybeird.github.io/post/string-similer/</link>
      <pubDate>Thu, 27 Oct 2016 17:01:35 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/string-similer/</guid>
      <description>许多程序会大量的使用字符串。对于不同的字符串，我们希望能有办法判断其相似程度。我们定义了一套操作方法来把两个不相同的字符串变得相同，具体的操</description>
    </item>
    
    <item>
      <title>『3』我要入门！让你们见识一下树和二叉树的力量！</title>
      <link>https://cybeird.github.io/post/i-want-to-learn-3rd/</link>
      <pubDate>Sun, 23 Oct 2016 09:50:54 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/i-want-to-learn-3rd/</guid>
      <description>&lt;p&gt;　　二叉树的递归定义如下：二叉树要么为空，要么由根节点(root)、左子树(left subtree)和右子树(right subtree)组成，而左子树和右子树分别是一棵二叉树。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>『2』我要入门！矩阵？辣鸡！[Uva 442](TOWQs)</title>
      <link>https://cybeird.github.io/post/i-want-to-know-2/</link>
      <pubDate>Sun, 16 Oct 2016 19:12:27 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/i-want-to-know-2/</guid>
      <description>&lt;p&gt;嗯，今天要刷的水题是一道&lt;a href=&#34;https://uva.onlinejudge.org/index.php?option=onlinejudge&amp;amp;page=show_problem&amp;amp;problem=383&#34;&gt;看起来很难的题目&lt;/a&gt;，因为当我们看到矩阵的时候难免会有‘一阵阵的恶心’，但是再仔细读了题意之后就会发现，这是一道很辣鸡的水题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>『1』我要入门！[UVa 514](TOWQs)</title>
      <link>https://cybeird.github.io/post/i-want-to-know-1/</link>
      <pubDate>Fri, 14 Oct 2016 10:10:46 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/i-want-to-know-1/</guid>
      <description>&lt;p&gt;好的，今天就是要先走一遍这&lt;a href=&#34;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;page=show_problem&amp;amp;problem=455&#34;&gt;一道题目&lt;/a&gt;。恩，就是简单的运用一下栈(stack)而已；&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gooooloooowoooocooo！{鱼人语：好水的题啊!}(TOWQs)</title>
      <link>https://cybeird.github.io/post/gooooloooowoooocooo/</link>
      <pubDate>Tue, 11 Oct 2016 21:01:34 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/gooooloooowoooocooo/</guid>
      <description>&lt;p&gt;如果奇迹有颜色，那么一定是“vijos上的橙名！”色；；&lt;/p&gt;
&lt;p&gt;没错，为了RP而奋斗的我，又一次的在&lt;a href=&#34;https://vijos.org/training&#34;&gt;训练营&lt;/a&gt;中发现了一道十分水的&lt;a href=&#34;https://vijos.org/p/1130&#34;&gt;题目&lt;/a&gt;！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一道水题背后的几把辛酸泪(TOWQs)</title>
      <link>https://cybeird.github.io/post/lots-tears-before-water-ques/</link>
      <pubDate>Mon, 26 Sep 2016 09:36:49 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/lots-tears-before-water-ques/</guid>
      <description></description>
    </item>
    
    <item>
      <title>一道十分经典的基础题背后竟然隐藏天大秘密！[TOWQs]</title>
      <link>https://cybeird.github.io/post/a-big-screat-of-base-qurs/</link>
      <pubDate>Fri, 23 Sep 2016 10:16:23 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/a-big-screat-of-base-qurs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>BIG: Trip Of WaterQuestions</title>
      <link>https://cybeird.github.io/post/big-trip-of-waterquestions/</link>
      <pubDate>Thu, 22 Sep 2016 20:59:56 +0800</pubDate>
      
      <guid>https://cybeird.github.io/post/big-trip-of-waterquestions/</guid>
      <description>&lt;p&gt;在悉心听取了吴菶菶的建议之后，那么我也开始在自己的blog上更新自己的题解什么的东西了&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
